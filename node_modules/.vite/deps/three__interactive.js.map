{
  "version": 3,
  "sources": ["../../three.interactive/src/index.ts"],
  "sourcesContent": ["import { Raycaster, Vector2 } from 'three';\n\nexport class InteractiveObject {\n  target: THREE.Object3D;\n  name: string;\n  intersected: boolean;\n  wasIntersected: boolean = false;\n  distance: number;\n  constructor(target: THREE.Object3D, name: string) {\n    this.target = target;\n    this.name = name;\n    this.intersected = false;\n    this.distance = 0;\n  }\n}\n\nexport class InteractiveEvent {\n  type: string;\n  cancelBubble: boolean;\n  originalEvent: Event | null;\n\n  // Dummy default values\n  coords: Vector2 = new Vector2(0, 0);\n  distance: number = 0;\n  intersected: boolean = false;\n\n  constructor(type: string, originalEvent: Event | null = null) {\n    this.cancelBubble = false;\n    this.type = type;\n    this.originalEvent = originalEvent;\n  }\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n}\n\nexport class InteractionManager {\n  renderer: THREE.Renderer;\n  camera: THREE.Camera;\n  domElement: HTMLElement;\n  bindEventsOnBodyElement: boolean;\n  mouse: Vector2;\n  supportsPointerEvents: boolean;\n  interactiveObjects: InteractiveObject[];\n  closestObject: InteractiveObject | null;\n  raycaster: THREE.Raycaster;\n\n  treatTouchEventsAsMouseEvents: boolean;\n\n  constructor(\n    renderer: THREE.Renderer,\n    camera: THREE.Camera,\n    domElement: HTMLElement,\n    dontBindEventsOnBody: boolean | undefined\n  ) {\n    this.renderer = renderer;\n    this.camera = camera;\n    this.domElement = domElement;\n    this.bindEventsOnBodyElement = true;\n    if (typeof dontBindEventsOnBody !== 'undefined' && dontBindEventsOnBody) {\n      this.bindEventsOnBodyElement = false;\n    }\n\n    this.mouse = new Vector2(-1, 1); // top left default position\n\n    this.supportsPointerEvents = !!window.PointerEvent;\n\n    this.interactiveObjects = [];\n    this.closestObject = null;\n\n    this.raycaster = new Raycaster();\n\n    domElement.addEventListener('click', this.onMouseClick);\n\n    if (this.supportsPointerEvents) {\n      if (this.bindEventsOnBodyElement) {\n        domElement.ownerDocument.addEventListener(\n          'pointermove',\n          this.onDocumentMouseMove\n        );\n      } else {\n        domElement.addEventListener('pointermove', this.onDocumentMouseMove);\n      }\n      domElement.addEventListener('pointerdown', this.onMouseDown);\n      domElement.addEventListener('pointerup', this.onMouseUp);\n    } else {\n      if (this.bindEventsOnBodyElement) {\n        domElement.ownerDocument.addEventListener(\n          'mousemove',\n          this.onDocumentMouseMove\n        );\n      } else {\n        domElement.addEventListener('mousemove', this.onDocumentMouseMove);\n      }\n      domElement.addEventListener('mousedown', this.onMouseDown);\n      domElement.addEventListener('mouseup', this.onMouseUp);\n      domElement.addEventListener('touchstart', this.onTouchStart, {\n        passive: true,\n      });\n      domElement.addEventListener('touchmove', this.onTouchMove, {\n        passive: true,\n      });\n      domElement.addEventListener('touchend', this.onTouchEnd, {\n        passive: true,\n      });\n    }\n\n    this.treatTouchEventsAsMouseEvents = true;\n  }\n\n  dispose = () => {\n    this.domElement.removeEventListener('click', this.onMouseClick);\n\n    if (this.supportsPointerEvents) {\n      this.domElement.ownerDocument.removeEventListener(\n        'pointermove',\n        this.onDocumentMouseMove\n      );\n      this.domElement.removeEventListener('pointerdown', this.onMouseDown);\n      this.domElement.removeEventListener('pointerup', this.onMouseUp);\n    } else {\n      this.domElement.ownerDocument.removeEventListener(\n        'mousemove',\n        this.onDocumentMouseMove\n      );\n      this.domElement.removeEventListener('mousedown', this.onMouseDown);\n      this.domElement.removeEventListener('mouseup', this.onMouseUp);\n      this.domElement.removeEventListener('touchstart', this.onTouchStart);\n      this.domElement.removeEventListener('touchmove', this.onTouchMove);\n      this.domElement.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  add = (object: THREE.Object3D, childNames: string[] = []) => {\n    if (object) {\n      if (childNames.length > 0) {\n        childNames.forEach((name) => {\n          const o = object.getObjectByName(name);\n          if (o) {\n            const interactiveObject = new InteractiveObject(o, name);\n            this.interactiveObjects.push(interactiveObject);\n          }\n        });\n      } else {\n        const interactiveObject = new InteractiveObject(object, object.name);\n        this.interactiveObjects.push(interactiveObject);\n      }\n    }\n  };\n\n  remove = (object: THREE.Object3D, childNames: string[] = []) => {\n    if (!object) return;\n    const filterSet = new Set<string>(\n      childNames.length > 0 ? childNames : [object.name]\n    );\n\n    this.interactiveObjects = this.interactiveObjects.filter(\n      (o) => !filterSet.has(o.name)\n    );\n  };\n\n  update = () => {\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // console.log( scene.children );\n\n    this.interactiveObjects.forEach((object) => {\n      if (object.target) this.checkIntersection(object);\n    });\n\n    this.interactiveObjects.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n\n    const newClosestObject =\n      this.interactiveObjects.find((object) => object.intersected) ?? null;\n    if (newClosestObject != this.closestObject) {\n      if (this.closestObject) {\n        const eventOutClosest = new InteractiveEvent('mouseout');\n        this.dispatch(this.closestObject, eventOutClosest);\n      }\n      if (newClosestObject) {\n        const eventOverClosest = new InteractiveEvent('mouseover');\n        this.dispatch(newClosestObject, eventOverClosest);\n      }\n      this.closestObject = newClosestObject;\n    }\n\n    let eventLeave: InteractiveEvent;\n    this.interactiveObjects.forEach((object) => {\n      if (!object.intersected && object.wasIntersected) {\n        if (!eventLeave) {\n          eventLeave = new InteractiveEvent('mouseleave');\n        }\n        this.dispatch(object, eventLeave);\n      }\n    });\n    let eventEnter: InteractiveEvent;\n    this.interactiveObjects.forEach((object) => {\n      if (object.intersected && !object.wasIntersected) {\n        if (!eventEnter) {\n          eventEnter = new InteractiveEvent('mouseenter');\n        }\n        this.dispatch(object, eventEnter);\n      }\n    });\n  };\n\n  checkIntersection = (object: InteractiveObject) => {\n    const intersects = this.raycaster.intersectObjects([object.target], true);\n\n    object.wasIntersected = object.intersected;\n\n    if (intersects.length > 0) {\n      let distance = intersects[0].distance;\n      intersects.forEach((i) => {\n        if (i.distance < distance) {\n          distance = i.distance;\n        }\n      });\n      object.intersected = true;\n      object.distance = distance;\n    } else {\n      object.intersected = false;\n    }\n  };\n\n  onDocumentMouseMove = (mouseEvent: MouseEvent | PointerEvent) => {\n    // event.preventDefault();\n\n    this.mapPositionToPoint(this.mouse, mouseEvent.clientX, mouseEvent.clientY);\n\n    const event = new InteractiveEvent('mousemove', mouseEvent);\n\n    this.interactiveObjects.forEach((object) => {\n      this.dispatch(object, event);\n    });\n  };\n\n  onTouchMove = (touchEvent: TouchEvent) => {\n    // event.preventDefault();\n\n    this.mapPositionToPoint(\n      this.mouse,\n      touchEvent.touches[0].clientX,\n      touchEvent.touches[0].clientY\n    );\n\n    const event = new InteractiveEvent(\n      this.treatTouchEventsAsMouseEvents ? 'mousemove' : 'touchmove',\n      touchEvent\n    );\n\n    this.interactiveObjects.forEach((object) => {\n      this.dispatch(object, event);\n    });\n  };\n\n  onMouseClick = (mouseEvent: MouseEvent) => {\n    this.update();\n\n    const event = new InteractiveEvent('click', mouseEvent);\n\n    this.interactiveObjects.forEach((object) => {\n      if (object.intersected) {\n        this.dispatch(object, event);\n      }\n    });\n  };\n\n  onMouseDown = (mouseEvent: MouseEvent | PointerEvent) => {\n    this.mapPositionToPoint(this.mouse, mouseEvent.clientX, mouseEvent.clientY);\n\n    this.update();\n\n    const event = new InteractiveEvent('mousedown', mouseEvent);\n\n    this.interactiveObjects.forEach((object) => {\n      if (object.intersected) {\n        this.dispatch(object, event);\n      }\n    });\n  };\n\n  onTouchStart = (touchEvent: TouchEvent) => {\n    this.mapPositionToPoint(\n      this.mouse,\n      touchEvent.touches[0].clientX,\n      touchEvent.touches[0].clientY\n    );\n\n    this.update();\n\n    const event = new InteractiveEvent(\n      this.treatTouchEventsAsMouseEvents ? 'mousedown' : 'touchstart',\n      touchEvent\n    );\n\n    this.interactiveObjects.forEach((object) => {\n      if (object.intersected) {\n        this.dispatch(object, event);\n      }\n    });\n  };\n\n  onMouseUp = (mouseEvent: MouseEvent | PointerEvent) => {\n    const event = new InteractiveEvent('mouseup', mouseEvent);\n\n    this.interactiveObjects.forEach((object) => {\n      this.dispatch(object, event);\n    });\n  };\n\n  onTouchEnd = (touchEvent: TouchEvent) => {\n    this.mapPositionToPoint(\n      this.mouse,\n      touchEvent.touches[0].clientX,\n      touchEvent.touches[0].clientY\n    );\n\n    this.update();\n\n    const event = new InteractiveEvent(\n      this.treatTouchEventsAsMouseEvents ? 'mouseup' : 'touchend',\n      touchEvent\n    );\n\n    this.interactiveObjects.forEach((object) => {\n      this.dispatch(object, event);\n    });\n  };\n\n  dispatch = (object: InteractiveObject, event: InteractiveEvent) => {\n    if (object.target && !event.cancelBubble) {\n      event.coords = this.mouse;\n      event.distance = object.distance;\n      event.intersected = object.intersected;\n      object.target.dispatchEvent(event);\n    }\n  };\n\n  mapPositionToPoint = (point: Vector2, x: number, y: number) => {\n    const rect = this.renderer.domElement.getBoundingClientRect();\n\n    point.x = ((x - rect.left) / rect.width) * 2 - 1;\n    point.y = -((y - rect.top) / rect.height) * 2 + 1;\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
